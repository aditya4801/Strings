bool isVowel(char v){
 return  ch=='a' || ch=='A'|| ch=='e' || ch=='E' || ch=='i' || ch=='I' || ch=='o' || ch=='O' || ch=='u' || ch=='U';
}
string reverseVowels(string s) {
  int start=0;
  int end= s.size();
  
  while(start < end){
  //finding the leftmost vowel
  
  while(start< s.size() && !isVowel(s[start]){
      start++;
   }   
  while(end>=0 && !isVowel(s[end]){
     end--;
   }
   if(start<end)
     swap(s[start], s[end]);
  }
  return s;
 }




bool isVowel(char ch){
bool isVowelchar=( ch=='a') || (ch=='A') ||( ch=='e') || (ch=='E') ||( ch=='i') || (ch=='I') ||( ch=='o') || (ch=='O') ||( ch=='u') || (ch=='U');

if(isVowelchar){
return true;
}
return false;
}
int firstIndex=0;
int lastIndex=s.length()-1;

while(firstIndex<=lastIndex){

bool left=isVowel(s[firstIndex]);
bool right=isVowel(s[lastIndex]);

if(left==true && right==true){

swap(s[fistIndex], s[rightIndex]);
firstIndex++;
lastIndex--;
}

else if(true==true && right==false){
rightIndex--;
}

else if(true==false && right== true){
leftIndex--;
}

else{
leftIndex++;
rightIndex--;
}
}
return s;
}
}
