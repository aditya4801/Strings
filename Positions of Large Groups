In a string s of lowercase letters, these letters form consecutive groups of the same character.

For example, a string like s = "abbxxxxzyy" has the groups "a", "bb", "xxxx", "z", and "yy".

A group is identified by an interval [start, end], where start and end denote the start and end indices (inclusive) of the group. In the above example, "xxxx" has the interval [3,6].

A group is considered large if it has 3 or more characters.

Return the intervals of every large group sorted in increasing order by start index.

Input: s = "abcdddeeeeaabbbcd"
Output: [[3,5],[6,9],[12,14]]
Explanation: The large groups are "ddd", "eeee", and "bbb".

class Solution {
public:
    vector<vector<int>> largeGroupPositions(string s) {
      vector<vector<int>ans;
      
      for(int i=0; i< s.size()-1; i++){
       if(s[i]==s[i+1]){
          vector<int>temp;
          temp.push_back(i);
          
          int j=i;
          
          while(s[i]==s[j]){
            i++;
           }
           temp.push_back(i);
           if(i-j>=2)
             ans.push_back(temp);
         } 
      }
      return ans;
    }
    };
